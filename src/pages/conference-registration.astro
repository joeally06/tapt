---
import Layout from '../layouts/Layout.astro';
import { getLatestConference } from '../lib/db';

const conference = await getLatestConference();
---

<Layout title="Conference Registration">
  <div class="min-h-screen py-12 bg-gray-50">
    <div class="container mx-auto px-4">
      <div class="max-w-3xl mx-auto">
        <div class="bg-white rounded-lg shadow-md p-8">
          <h1 class="text-3xl font-bold text-primary-800 mb-6 text-center">TAPT Conference Registration</h1>
          
          <div class="mb-8">
            <h2 class="text-2xl font-semibold mb-4">{conference.name}</h2>
            <div class="grid grid-cols-1 md:grid-cols-2 gap-6 mb-6">
              <div>
                <p class="text-gray-600">Date</p>
                <p class="font-medium">{new Date(conference.start_date).toLocaleDateString('en-US', { year: 'numeric', month: 'long', day: 'numeric' })} - {new Date(conference.end_date).toLocaleDateString('en-US', { year: 'numeric', month: 'long', day: 'numeric' })}</p>
              </div>
              <div>
                <p class="text-gray-600">Location</p>
                <p class="font-medium">{conference.location}</p>
              </div>
              <div>
                <p class="text-gray-600">Registration Fee</p>
                <p class="font-medium">$175.00 per attendee</p>
              </div>
            </div>
          </div>

          <form id="registration-form" class="space-y-6">
            <div>
              <label class="block text-sm font-medium text-gray-700 mb-2">School District or Company *</label>
              <input
                type="text"
                name="organization"
                required
                class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-primary-500"
              />
            </div>

            <div id="attendees-container">
              {[1, 2, 3, 4].map((num) => (
                <div class="attendee-section border-t pt-6 first:border-t-0 first:pt-0 hidden" data-attendee={num}>
                  <div class="flex justify-between items-center mb-4">
                    <h3 class="text-lg font-medium">Attendee {num} {num === 1 ? '*' : ''}</h3>
                    <button type="button" class="remove-attendee text-red-600 hover:text-red-800 text-sm">
                      Remove
                    </button>
                  </div>
                  <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                    <div>
                      <label class="block text-sm font-medium text-gray-700 mb-2">First Name</label>
                      <input
                        type="text"
                        name={`attendee${num}FirstName`}
                        required={num === 1}
                        class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-primary-500"
                      />
                    </div>
                    <div>
                      <label class="block text-sm font-medium text-gray-700 mb-2">Last Name</label>
                      <input
                        type="text"
                        name={`attendee${num}LastName`}
                        required={num === 1}
                        class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-primary-500"
                      />
                    </div>
                  </div>
                </div>
              ))}
            </div>

            <div class="flex justify-between items-center">
              <button
                type="button"
                id="add-attendee"
                class="text-primary-600 hover:text-primary-800 text-sm font-medium"
              >
                + Add Attendee
              </button>
              <div class="text-sm text-gray-600">
                Total Attendees: <span id="attendee-count">0</span>
              </div>
            </div>

            <div id="total-amount-section" class="hidden">
              <label class="block text-sm font-medium text-gray-700 mb-2">Total Amount</label>
              <div class="relative">
                <span class="absolute left-3 top-2">$</span>
                <input
                  type="text"
                  name="totalAmount"
                  readonly
                  value="0.00"
                  class="w-full pl-8 pr-3 py-2 border border-gray-300 rounded-md bg-gray-50"
                />
              </div>
            </div>

            <div class="bg-gray-50 p-4 rounded-md">
              <p class="text-sm text-gray-600">
                Please mail the completed form and payment check to:<br>
                TAPT P.O. BOX 68<br>
                MCMINNVILLE, TN 37111
              </p>
              <p class="text-sm text-gray-600 mt-2">
                For credit card payments, visit:<br>
                <a href="https://www.paypal.com/ncp/payment/2TB7GLXUJXRXW" class="text-primary-600 hover:text-primary-800" target="_blank" rel="noopener">
                  PayPal Payment Link
                </a>
              </p>
            </div>

            <button
              type="submit"
              class="w-full bg-primary-600 text-white py-3 px-6 rounded-md hover:bg-primary-700 transition-colors font-medium"
            >
              Submit Registration
            </button>
          </form>
        </div>
      </div>
    </div>
  </div>
</Layout>

<script>
  const form = document.getElementById('registration-form');
  const attendeesContainer = document.getElementById('attendees-container');
  const addAttendeeBtn = document.getElementById('add-attendee');
  const attendeeCountSpan = document.getElementById('attendee-count');
  const totalAmountInput = form?.querySelector('[name="totalAmount"]');
  const totalAmountSection = document.getElementById('total-amount-section');
  const PRICE_PER_ATTENDEE = 175;
  const MAX_ATTENDEES = 4;

  function updateTotalAmount(attendeeCount) {
    const total = attendeeCount * PRICE_PER_ATTENDEE;
    if (totalAmountInput) {
      totalAmountInput.value = total.toFixed(2);
    }
    if (attendeeCountSpan) {
      attendeeCountSpan.textContent = attendeeCount.toString();
    }
    if (addAttendeeBtn) {
      addAttendeeBtn.disabled = attendeeCount >= MAX_ATTENDEES;
    }
    if (totalAmountSection) {
      if (attendeeCount > 0) {
        totalAmountSection.classList.remove('hidden');
      } else {
        totalAmountSection.classList.add('hidden');
      }
    }
  }

  function getVisibleAttendeeCount() {
    return document.querySelectorAll('.attendee-section:not(.hidden)').length;
  }

  // Handle removing attendees
  document.querySelectorAll('.remove-attendee').forEach(button => {
    button.addEventListener('click', () => {
      const section = button.closest('.attendee-section');
      if (section) {
        section.classList.add('hidden');
        const inputs = section.querySelectorAll('input');
        inputs.forEach(input => {
          input.value = '';
          input.required = false;
        });
        updateTotalAmount(getVisibleAttendeeCount());
      }
    });
  });

  // Handle adding attendees
  addAttendeeBtn?.addEventListener('click', () => {
    const hiddenSections = document.querySelectorAll('.attendee-section.hidden');
    if (hiddenSections.length > 0) {
      hiddenSections[0].classList.remove('hidden');
      const inputs = hiddenSections[0].querySelectorAll('input');
      inputs.forEach(input => input.required = true);
      updateTotalAmount(getVisibleAttendeeCount());
    }
  });

  form?.addEventListener('submit', async (e) => {
    e.preventDefault();
    const formData = new FormData(e.target as HTMLFormElement);
    const visibleAttendees = getVisibleAttendeeCount();
    
    const attendees = [];
    for (let i = 1; i <= visibleAttendees; i++) {
      const firstName = formData.get(`attendee${i}FirstName`);
      const lastName = formData.get(`attendee${i}LastName`);
      if (firstName && lastName) {
        attendees.push({ firstName, lastName });
      }
    }

    try {
      const response = await fetch('/api/register', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          organization: formData.get('organization'),
          attendees,
          totalAmount: parseFloat(totalAmountInput?.value || '0'),
        }),
      });

      if (response.ok) {
        window.location.href = '/registration-success';
      } else {
        throw new Error('Registration failed');
      }
    } catch (error) {
      console.error('Registration error:', error);
      alert('Registration failed. Please try again.');
    }
  });

  // Initialize with no attendees
  updateTotalAmount(0);
</script>